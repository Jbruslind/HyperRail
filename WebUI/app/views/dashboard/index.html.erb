<h1>Quick Control</h1>

<div class="row">
  <div id="test" class="container col-md-4">
    <svg id="jog_dial" xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="-5 -5 110 110">
        <circle cx="50" cy="50" r="50" style="fill: #eee; stroke-width: 0.5; stroke: black">
            <title>100 centimeters</title>
        </circle>
        <circle cx="50" cy="50" r="37.5" style="fill: #ccc">
            <title>10 centimeters</title>
        </circle>
        <circle cx="50" cy="50" r="25" style="fill: #aaa">
            <title>1 centimeter</title>
        </circle>
        <circle cx="50" cy="50" r="12.5" style="fill: white"></circle>
        <g style="fill: #777; stroke-width:0.5; cursor: pointer; cursor: hand">
          <polygon points="30,10 50,2.5 70,10" data-action="Move up 100cm" />
          <polygon points="10,30 2.5,50 10,70" data-action="Move left 100cm" />
          <polygon points="90,30 97.5,50 90,70" data-action="Move right 100cm" />
          <polygon points="30,90 50,97.5 70,90" data-action="Move down 100cm" />
        </g>
        <g style="fill: #555; stroke-width:0.5; cursor: pointer; cursor: hand">
          <polygon points="32.5,22.5 50,15 67.5,22.5" data-action="Move up 10cm" />
          <polygon points="22.5,32.5 15,50 22.5,67.5" data-action="Move left 10cm" />
          <polygon points="77.5,32.5 85,50 77.5,67.5" data-action="Move right 10cm" />
          <polygon points="32.5,77.5 50,85 67.5,77.5" data-action="Move down 10cm" />
        </g>
        <g style="fill: #333; stroke-width:0.5; cursor: pointer; cursor: hand">
          <polygon points="35,35 50,27.5 65,35" data-action="Move up 1cm" />
          <polygon points="35,35 27.5,50 35,65" data-action="Move left 1cm" />
          <polygon points="65,35 72.5,50 65,65" data-action="Move right 1cm" />
          <polygon points="35,65 50,72.5 65,65" data-action="Move down 1cm" />
        </g>
    </svg>
  </div>
  <div id="grid"></div>
</div>

<script>
    $('polygon').click(function() {
      alert('Movement dial clicked: ' + $(this).data('action'));
    });

    function buildGrid(height, width, rectWidth, rectHeight)
    {
        var image = document.createElement("img");
        /*image.src = "https://www.unoosa.org/res/timeline/index_html/space-2.jpg";
        image.setAttribute("width", "100%");
        image.setAttribute("height", "100%");
        document.getElementById("grid").appendChild(image);*/

        var xmlns = "http://www.w3.org/2000/svg";

        var numOfRects = (12*5)/(1*.8);
        var gridWidth = height;
        var gridHeight = width;
        var rectID = "rect";
        let xFactor = .01;
        let yFactor = .01;

        var svg = document.createElementNS(xmlns, 'svg');
        svg.setAttribute("width", width);
        svg.setAttribute("height", height);

        var image = document.createElementNS(xmlns, "image");
        image.setAttributeNS(null, "width", "50%");
        image.setAttributeNS(null, "height", "70%");
        image.setAttributeNS(null, "x", 10);
        image.setAttributeNS(null, "y", -180);
        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', 'https://www.unoosa.org/res/timeline/index_html/space-2.jpg');
        svg.appendChild(image);

        var g = document.createElementNS(xmlns, 'g');
        g.setAttribute("style", "cursor: pointer; cursor: hand");

        for (var i = 1; i <= numOfRects; i++)
        {
            var rectangle = document.createElementNS(xmlns, 'rect');
            rectID += (i);
            rectangle.setAttribute("id", rectID);
            rectangle.setAttribute("x", xFactor*gridWidth);
            rectangle.setAttribute("y", yFactor*gridHeight);
            rectangle.setAttribute("width", rectWidth);
            rectangle.setAttribute("height", rectHeight);
            rectangle.setAttribute("stroke", "black");
            rectangle.setAttribute("fill", "transparent");
            rectangle.setAttribute("stroke-width", 1);
            g.appendChild(rectangle);

            if(i%10 == 0)
            {
                xFactor = .01;
                yFactor += .05;
            }
            else
            {
                xFactor += .05;
            }
            rectID = "rect";
        }
        svg.appendChild(g);
        document.getElementById("grid").appendChild(svg);
    }

    buildGrid(1000, 1000, 50, 50);

    waypoints = [];
    $('rect').click(function() {
        var svgElement = document.getElementById($(this).attr('id'));

        if(svgElement.getAttribute('fill') == 'black')
        {
            svgElement.setAttribute('fill', 'transparent');
            var target = svgElement.getAttribute('id');
            var result = waypoints.indexOf(target);
            console.log(result);
        }
        else
        {
            svgElement.setAttribute('fill-opacity', '0.4');
            svgElement.setAttribute('fill', 'black');
            waypoints.push(svgElement.getAttribute('id'));
            console.log(waypoints.length);
        }
    });
</script>
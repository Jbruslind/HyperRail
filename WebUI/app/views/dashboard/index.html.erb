<div class="row">
  <div class="col-lg-4 col-md-6 col-md-offset-0 col-sm-8 col-sm-offset-2 col-xs-12">
    <%= render 'dashboard/status' %>
  </div>
  <div class="col-lg-4 col-md-6 col-md-offset-0 col-sm-8 col-sm-offset-2 col-xs-12">
    <%= render 'dashboard/gcode' %>
  </div>
  <div class="col-lg-4 col-md-6 col-md-offset-0 col-sm-8 col-sm-offset-2 col-xs-12">
    <%= render 'dashboard/quick_controls' %>
  </div>
</div>

<div class="row">
  <div id="grid"></div>
</div>

<script>
    // The JSON attributes of the selection grid (Camera.from_settings.unit_sizes)
    var unit_sizes = <%= Camera.from_settings.unit_sizes.to_json.html_safe %>;
    var image_path = <%= '/camera_images/space-2.jpg'.to_json.html_safe %>;
    var areas_of_interest = [];

    function buildGrid(height, width, rectWidth, rectHeight)
    {
        var image = document.createElement("img");
        /*image.src = image_path;
        image.setAttribute("width", "100%");
        image.setAttribute("height", "100%");
        document.getElementById("grid").appendChild(image);*/

        var xmlns = "http://www.w3.org/2000/svg";

        var numOfRects = (12*5)/(1*.8);
        var gridWidth = height;
        var gridHeight = width;
        var rectID = "rect";
        let xFactor = .01;
        let yFactor = .01;

        var svg = document.createElementNS(xmlns, 'svg');
        svg.setAttribute("width", width);
        svg.setAttribute("height", height);

        var image = document.createElementNS(xmlns, "image");
        image.setAttributeNS(null, "width", "50%");
        image.setAttributeNS(null, "height", "70%");
        image.setAttributeNS(null, "x", 10);
        image.setAttributeNS(null, "y", -180);
        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', image_path);
        svg.appendChild(image);

        var g = document.createElementNS(xmlns, 'g');
        g.setAttribute("style", "cursor: pointer; cursor: hand");

        for (var i = 1; i <= numOfRects; i++)
        {
            var rectangle = document.createElementNS(xmlns, 'rect');
            rectID += (i);
            rectangle.setAttribute("id", rectID);
            rectangle.setAttribute("x", xFactor*gridWidth);
            rectangle.setAttribute("y", yFactor*gridHeight);
            rectangle.setAttribute("width", rectWidth);
            rectangle.setAttribute("height", rectHeight);
            rectangle.setAttribute("stroke", "black");
            rectangle.setAttribute("fill", "transparent");
            rectangle.setAttribute("stroke-width", 1);
            g.appendChild(rectangle);

            if(i%10 == 0)
            {
                xFactor = .01;
                yFactor += .05;
            }
            else
            {
                xFactor += .05;
            }
            rectID = "rect";
        }
        svg.appendChild(g);
        document.getElementById("grid").appendChild(svg);
    }

    buildGrid(1000, 1000, 50, 50);

    waypoints = [];
    $('rect').click(function() {
        var svgElement = document.getElementById($(this).attr('id'));

        if(svgElement.getAttribute('fill') == 'black')
        {
            svgElement.setAttribute('fill', 'transparent');
            var target = svgElement.getAttribute('id');
            var result = waypoints.indexOf(target);
            console.log(result);
        }
        else
        {
            svgElement.setAttribute('fill-opacity', '0.4');
            svgElement.setAttribute('fill', 'black');
            waypoints.push(svgElement.getAttribute('id'));
            console.log(waypoints.length);
        }
    });
</script>
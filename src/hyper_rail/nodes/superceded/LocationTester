#!/usr/bin/env python3

import rospy
import sys

from hyper_rail.srv import InterfaceService, InterfaceServiceRequest, InterfaceServiceResponse
from hyper_rail.srv import PathService


def location_client(stat, wid):
    rospy.wait_for_service('action_status')
    try:
        message = rospy.ServiceProxy('action_status', PathService)
        resp1 = message(stat, wid)
        return resp1.path_response
    except rospy.ServiceException as e:
        print("Service call failed: %s"%e)

def usage():
    return "%s [status message to send]"%sys.argv[0]

if __name__ == "__main__":
    if len(sys.argv) == 3:
        # status
        stat = str(sys.argv[1])
        # waypoint id
        wid = str(sys.argv[2])
    else:
        print(usage())
        sys.exit(1)
    print("Sending status: %s %s"%(stat, wid))
    location_client(stat, wid)
    # print("received: %s"%(path_client(x)))
    # print("%s + %s = %s"%(x, y, add_two_ints_client(x, y)))